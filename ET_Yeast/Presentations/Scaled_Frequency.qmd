---
title: "Predicting phenotypic and genotypic evolution given fluctuating selection"
author: "Esdras T"
format: 
  revealjs:
    standalone: true
    self-contained: true
    slide-number: true
    show-slide-number: all
editor: visual
---

## Aims

```{r, echo=FALSE, message=FALSE}
library(tidyverse)
library(stringr)
library(cowplot)
theme_set(theme_cowplot())
```

```{r, echo=FALSE, message=FALSE}
mytheme <- function(){
  theme_set(theme_cowplot())+
    theme(axis.title = element_text(face = "bold"),
          axis.text = element_text(face = "italic"),
          plot.title = element_text(hjust = 0.5),
          legend.position = "none")
}
```


## Genotype file

```{r, echo=FALSE}
mygeno <- read.csv("~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/LinFS.dir/genome1_n100_H0.5SD3Gen30.csv") %>% dplyr::select(-Origin)
```

## Phenotype file

```{r, echo=FALSE}
mypheno <- read.csv("~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/LinFS.dir/MeanPhenotypes1_n100_H0.5SD3Gen30.csv")
#knitr::kable(head(mypheno))
```

## Alle Frequency (single plot FS)

```{r , fig.width=8, fig.height=6, echo=FALSE}
mygeno %>% 
   group_by(Position) %>% 
  mutate(Frequency = Frequency - Frequency[Generation == 1]) %>% 
  ggplot(aes(Generation, Frequency, color = as.character(Position)))+
  geom_line(linewidth = 0.2)+
  ggtitle("Alle freq plot h2 = 0.5, sd = 3 for 30 Generations")+
  mytheme()
```

## Allele Frequency (single model)

```{r, fig.width=8, fig.height=6, echo=FALSE}
source("~/YeastProj.dir/evogen-sims/ET_Yeast/Code/Selection_Models/WF.dir/Plotting/Scaled_Frequency.R")
dir_path <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/LinFS.dir/"
pattern <- "^genome.*0\\.5SD3Gen30\\.csv$"
ncol <- 3

plot_files(dir_path, pattern, ncol = ncol)
```

## Mean Allele Frequency (all variables)

```{r, fig.width=8, fig.height=6, echo=FALSE, message=FALSE}
source("~/YeastProj.dir/evogen-sims/ET_Yeast/Presentations/Scaled_Frequency.R")
dir_path <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/CS.dir/"
pattern <- "^genome\\d+_n70_H0[.1]+SD\\d+Gen\\d+\\.csv$"
output_dir <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/Plots.dir/CS.dir/Frequency/"
allele_feq_fx(dir_path, pattern, output_dir)
```


```{r, fig.width=8, fig.height=6, echo=FALSE, message=FALSE}
source("~/YeastProj.dir/evogen-sims/ET_Yeast/Presentations/Scaled_Frequency.R")
dir_path <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/NS.dir/"
pattern <- "^genome\\d+_n70_H0[.1]+SD\\d+Gen\\d+\\.csv$"
output_dir <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/Plots.dir/NS.dir/Frequency/"
allele_feq_fx(dir_path, pattern, output_dir)
```




```{r, fig.width=8, fig.height=6, echo=FALSE, message=FALSE}
source("~/YeastProj.dir/evogen-sims/ET_Yeast/Presentations/Scaled_Frequency.R")
dir_path <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/SinFSGen.dir/"
pattern <- "^genome\\d+_n70_H0[.1]+SD\\d+\\.csv$"
output_dir <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/Plots.dir/SinFSGen.dir/Frequency/"
allele_feq_fx(dir_path, pattern, output_dir)
```



## Phenotypes (single plot FS)

```{r, fig.width=8, fig.height=6, echo=FALSE}
mypheno %>% ggplot(aes(Generation, Phenotype))+
  geom_line(linewidth = 0.2)+
  ggtitle("Phenotype plot h2 = 0.5, sd = 3 for 30 Generations")+
  mytheme()
```

## Phenotypes (single model)

```{r, fig.width=8, fig.height=6, echo=FALSE, message=FALSE}
source("~/YeastProj.dir/evogen-sims/ET_Yeast/Code/Selection_Models/WF.dir/Plotting/Scaled_Frequency.R")
dir_path <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/LinFS.dir/"
pattern <- "^MeanPhenotypes.*0\\.5SD3Gen30\\.csv$"
ncol <- 3

Pheno_files(dir_path, pattern, ncol)
```

## Phenotypes (all variables)

```{r, fig.width=8, fig.height=6, echo=FALSE, message=FALSE}
source("~/YeastProj.dir/evogen-sims/ET_Yeast/Presentations/Scaled_Frequency.R")
dir_path <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/NS.dir/"
pattern <- "^MeanPhenotypes\\d+_n70_H0[.1]+SD\\d+Gen\\d+\\.csv$"
output_dir <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/Plots.dir/NS.dir/Phenotypes/"
pheno_fx(dir_path, pattern, output_dir)

```


```{r, fig.width=8, fig.height=6, echo=FALSE, message=FALSE}
source("~/YeastProj.dir/evogen-sims/ET_Yeast/Presentations/Scaled_Frequency.R")
dir_path <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/CS.dir/"
pattern <- "^MeanPhenotypes\\d+_n70_H0[.1]+SD\\d+Gen\\d+\\.csv$"
output_dir <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/Plots.dir/CS.dir/Phenotypes/"
pheno_fx(dir_path, pattern, output_dir)

```


```{r, fig.width=8, fig.height=6, echo=FALSE, message=FALSE}
source("~/YeastProj.dir/evogen-sims/ET_Yeast/Presentations/Scaled_Frequency.R")
dir_path <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/SinFSGen.dir/"
pattern <- "^MeanPhenotypes\\d+_n70_H0[.1]+SD\\d+\\.csv$"
output_dir <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/Plots.dir/SinFSGen.dir/Phenotypes/"
pheno_fx(dir_path, pattern, output_dir)

```

## Spectral Analysis

```{r}
files <- list.files(path = "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/NS.dir/", pattern = "^genome\\d+_n70_H0[.1]+SD\\d+Gen\\d+\\.csv$", full.names = TRUE)

all_results <- data.frame()

#Iterate files in the directory
for (file_name in files) {
  #read in each file
  file <- read.csv(file_name) %>% dplyr::select(!c(Origin, Effect))
  
  # Pivot wider your data to tranform for each generation
  dat_wide <- pivot_wider(file[,c("Generation","Position","Frequency")], names_from=Position, values_from=Frequency)
  dat_wide[is.na(dat_wide)] <- 0 
  ff1 <-dat_wide[,2:71]
  
  # Apply spectrum and calculate row means
  ttest <- spectrum(ff1, spans=2, plot=FALSE)
  out.spect <- rowMeans(ttest$spec)
  
  # Prepare data frame for plot
  dd <- data.frame("Frequency"= rep(ttest$freq), 
                   "File"= basename(file_name), # Add a column for file name for color
                   "sel"=rep("FS",each=1000),
                   "spec"=out.spect)
  
  # Combine with previous results
  all_results <- rbind(all_results, dd)
}

fft1 <- all_results %>%
  mutate(Frequency= 1/Frequency) %>% 
  filter(Frequency < 80) %>% 
  ggplot(aes(Frequency, spec, color = File)) + 
  geom_line(linewidth=0.2) +
  theme(legend.position = "none")+
  xlab("Periodicity") +
  ylab("Spectral Density")+
  mytheme()

fft1
```


```{r}
files <- list.files(path = "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/CS.dir/", pattern = "^genome\\d+_n70_H0[.1]+SD\\d+Gen\\d+\\.csv$", full.names = TRUE)

all_results <- data.frame()

#Iterate files in the directory
for (file_name in files) {
  #read in each file
  file <- read.csv(file_name) %>% dplyr::select(!c(Origin, Effect))
  
  # Pivot wider your data to tranform for each generation
  dat_wide <- pivot_wider(file[,c("Generation","Position","Frequency")], names_from=Position, values_from=Frequency)
  dat_wide[is.na(dat_wide)] <- 0 
  ff1 <-dat_wide[,2:71]
  
  # Apply spectrum and calculate row means
  ttest <- spectrum(ff1, spans=2, plot=FALSE)
  out.spect <- rowMeans(ttest$spec)
  
  # Prepare data frame for plot
  dd <- data.frame("Frequency"= rep(ttest$freq), 
                   "File"= basename(file_name), # Add a column for file name for color
                   "sel"=rep("FS",each=1000),
                   "spec"=out.spect)
  
  # Combine with previous results
  all_results <- rbind(all_results, dd)
}

fft1 <- all_results %>%
  mutate(Frequency= 1/Frequency) %>% 
  filter(Frequency < 80) %>% 
  ggplot(aes(Frequency, spec, color = File)) + 
  geom_line(linewidth=0.2) +
  theme(legend.position = "none")+
  xlab("Periodicity") +
  ylab("Spectral Density")+
  mytheme()

fft1
```

```{r}
files <- list.files(path = "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/SinFSGen.dir/", pattern = "^genome\\d+_n70_H0[.1]+SD\\d+\\.csv$", full.names = TRUE)#pattern = "^genome\\d+_n70_H0[.1]+SD\\d+Gen\\d+\\.csv$"

all_results <- data.frame()

#Iterate files in the directory
for (file_name in files) {
  #read in each file
  file <- read.csv(file_name) %>% dplyr::select(!c(Origin, Effect))
  
  # Pivot wider your data to tranform for each generation
  dat_wide <- pivot_wider(file[,c("Generation","Position","Frequency")], names_from=Position, values_from=Frequency)
  dat_wide[is.na(dat_wide)] <- 0 
  ff1 <-dat_wide[,2:71]
  
  # Apply spectrum and calculate row means
  ttest <- spectrum(ff1, spans=2, plot=FALSE)
  out.spect <- rowMeans(ttest$spec)
  
  # Prepare data frame for plot
  dd <- data.frame("Frequency"= rep(ttest$freq), 
                   "File"= basename(file_name), # Add a column for file name for color
                   "sel"=rep("FS",each=1000),
                   "spec"=out.spect)
  
  # Combine with previous results
  all_results <- rbind(all_results, dd)
}

fft1 <- all_results %>%
  mutate(Frequency= 1/Frequency) %>% 
  filter(Frequency < 100) %>% #0.020
  ggplot(aes(Frequency, spec, color = File)) + 
  geom_line(linewidth=0.2) +
  theme(legend.position = "none")+
  xlab("Periodicity") +
  ylab("Spectral Density")+
  mytheme()

fft1
```

