---
title: "Lab_Notebook"
author: "Esdras T"
format: html
editor: visual
---

## Simulation project

Here are the notes taken while working on the yeast simulation model. Most of these notes are based on the code writing and some additional ideas that might come while working on the project.

## Writting Flow

The most current notes are at the top.

[***March 6th 2023***]{.underline}

Started the project while following a single step per time. The first stem was to set the genome size and the number of QTLs. The genome size will approximately equal to 1,220,281 (arbitrary), and the number of QTLs considered are 1 with interval (I) of 610,140, 10 QTLs (I = 110,934), 70 QTLs (I = 17,186), 100 QTLs (I = 12,081), 300 QTLs (I = 4,053).

> To write the file, the file name will include the replicate, QTL#, and hertability value

On the plan, there is writing a bash code that combines all the files together.

[***February 20th 2023***]{.underline}

Remember that to output the whole genome file, you can use sim.outputFull("path to your directory"). The same applies when you want to save VCF file and some other important files.

[***January 7th 2023***]{.underline}

\[***defineGlobal***\] makes your object available for use. For example, the new optimum or new population size. ?? How is it different from define constant? For a constant, it is mostly a single number while Global can be a list.

[***January 5th 2023***]{.underline}

The tick and cycle events in slim make sense especially when we are considering overlapping population. That is, one person might have a child, grand-child, and grand grand kids. Thefore, for that particular person, we might see one tick, and have multiple cycles. \[That's how I would explain tick and cycle thing\]

[***December 23rd 2022***]{.underline}

I today figured out that .tagF wouldn't work until we scale the fitness. Maybe it might be good to read more about it in the Eidos manual. Also, according to the plots, it seemed like the mutation doesn't change much about the frequency over generation when used a genome from dummy population.ed

[***December 5th 2022***]{.underline}

Creating an initial genome using a dummy population. In this case we need a sub-population with a single genome that has added mutations and its effect size correspond to the number of QTLs.

```{r, echo=FALSE}
library(slimr)
slim_block(1, early(),
             {sim.addSubpop("p2", 1);
	g = p2.genomes[0];
	muts = g.addNewMutation(m2, rexp(100), Q);
	
	sim.addSubpop("p1", 10000);
	marks = runif(100, 0,1);
	ind = 0;
	for(qpos in Q)
	{
		for(g in p1.genomes)
		{
			if(rbinom(1,1,marks[ind])==1){g.addMutations(muts[ind]);}
		}
		ind = ind + 1;
	}
	p2.setSubpopulationSize(0);})

```

Have an initial frequency distribution; draw random positions where your mutations could be in the sub-population to use.

[***November 29th 2022***]{.underline}

[*The very beginning of the notes.*]{.underline}

During the one on one meeting, we discussed about selection coefficient. I came to realize that our selection is predicated on the **optimum phenotype** not the selection coefficient we set. For fluctuating selection, we will be **changing the optimum phenotype at a given generation interval**.

Also, we talked about the introduction of new mutations. When only one individual carries the mutation (assuming beneficial mutation), that individual will have a high fitness thus higher reproductive priorities. Therefore, the mutation will fix so quickly.
