---
title: "Fluctuation"
format: html
editor: visual
---

```{r, echo=FALSE, message=FALSE}
library(tidyverse)
library(cowplot)
library(purrr)
library(doParallel)
theme_set(theme_cowplot())
mytheme <- function(){
  theme_set(theme_cowplot())+
    theme(axis.title = element_text(face = "bold"),
          axis.text = element_text(face = "italic"),
          plot.title = element_text(hjust = 0.5),
          legend.position = "none")
}
```

## Fluctuation

This file was created to check if we can fluctuating loci from non-fluctuating.

The chuck below helps us to set a threshold

```{r}

af <- read.csv("~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/LinFS.dir/genome30_n70_H0.8SD3Gen30.csv") %>%
  select(-Origin, -Effect) %>%
  group_by(Position) %>%
  mutate(Frequency = Frequency - Frequency[Generation == 1]) %>%
  pivot_wider(names_from = Position, values_from = Frequency) %>%
  mutate_at(vars(-Generation), ~c(0, diff(.))) %>%
  pivot_longer(cols = -Generation, names_to = "Position", values_to = "Frequency") %>%
  group_by(Position) %>% 
  summarise(mu_fr = mean(abs(Frequency), na.rm = TRUE)) %>% 
  arrange(mu_fr) %>% replace_na(list(mu_fr = 0))



af %>% ggplot(aes(mu_fr, fill = Position))+
  geom_histogram(bins = 50)+
  geom_vline(xintercept = median(af$mu_fr), color = "magenta")+
  geom_vline(xintercept = mean(af$mu_fr), col = "black")+
  geom_vline(xintercept = mean(af$mu_fr) - sd(af$mu_fr)/sqrt(length(af$mu_fr)), col = "red")+ # sd(af$mu_fr)/sqrt(length(af$mu_fr)
  mytheme()

afm <- af  %>% filter(mu_fr > mean(mu_fr) - sd(mu_fr)/sqrt(length(mu_fr))) # (mu_fr > 0.001)# sd(mu_fr)/sqrt(length(mu_fr))

```

Form this chunk, we use the threshold to select loci that are fluctuating over time

```{r}
#| echo: false
done <- read.csv("~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/LinFS.dir/genome30_n70_H0.8SD3Gen30.csv") %>% 
  filter(Position %in% c(list(as.numeric(afm$Position))[[1]])) #%>%
  #mutate(Frequency = Frequency - Frequency[Generation == 1])

done %>% #filter(Position == 636304) %>% 
      ggplot(aes(x = Generation, y = Frequency, color = as.factor(Position))) +
      geom_line(linewidth = 0.2) +
      ggtitle(paste("Frequency plot for Locus Heritability")) +
      labs(y = "Mean Frequency")+
  mytheme()
```

Counting the position

```{r}
length(afm$Position)
```

Plotting Spectral analysis plot from selected loci

```{r}
done <- read.csv("~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/LinFS.dir/genome30_n70_H0.8SD3Gen30.csv")
done1 <- done %>% select(c(Generation, Position, Frequency)) %>% 
  pivot_wider(names_from = Position, values_from = Frequency) %>% 
  mutate_all(~replace(., is.na(.), 0))

fourier_data <-  spectrum(done1[-1], spans = 2, plot = F)

Fourier_spec <- rowMeans(fourier_data$spec)
Fourier_freq <- fourier_data$freq

MyFour <- data.frame(Spectrum = Fourier_spec, Frequency = Fourier_freq)

MyFour %>% ggplot(aes(Frequency, Spectrum))+
  geom_line()

MyFour %>% 
  mutate(Frequency = 1/Frequency) %>% 
  filter(Frequency < 70) %>% 
  ggplot(aes(Frequency, Spectrum))+
  geom_line()
  
```

## Assessment

```{r}
Freq_Effect <- done %>% filter(Generation == 1) %>% 
  select(c(Position, Frequency, Effect)) %>% 
  arrange(Effect)
af <- af %>% 
  mutate(Position = as.numeric(Position))

joint_eff <- inner_join(Freq_Effect, af, by = "Position") %>% arrange(mu_fr)
```

```{r, echo=FALSE}
# Freq_Effect %>% 
#   #filter(Frequency >= 0.5) %>% 
#   ggplot(aes(Effect, Frequency, color = as.character(Position)))+
#   geom_point()+
#   geom_hline(yintercept = 0.5, color = "darkred")+
#   mytheme()
```

```{r}
length(Freq_Effect$Frequency)
str(Freq_Effect %>% filter(Frequency >= 0.5))
```

```{r}
done2 <- read.csv("~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/LinFS.dir/genome30_n70_H0.8SD3Gen30.csv")

Freq_Effect2 <- done2 %>% filter(Generation == 1) %>% 
  select(c(Position, Frequency, Effect)) %>% 
  arrange(Effect)

# Freq_Effect2 %>% 
#   #filter(Frequency >= 0.5) %>% 
#   ggplot(aes(Effect, Frequency, color = as.character(Position)))+
#   geom_point()+
#   geom_hline(yintercept = 0.5, color = "darkred")+
#   mytheme()
```

```{r}
# View(Freq_Effect2)
# 
# View(Freq_Effect)
```

## Relationship between mu_freq, Freq, and Effect

```{r}
joint_eff %>% 
  ggplot(aes(mu_fr, Frequency, color = as.character(Position)))+
  geom_point()+
  geom_hline(yintercept = 0.5, color = "darkred")+
  mytheme()
```

```{r}
joint_eff %>% 
  ggplot(aes(mu_fr, Effect, color = as.character(Position)))+
  geom_point()+
  mytheme()
```

```{r}
library(scatterplot3d)

colors <- colorRampPalette(c("blue", "red"))(length(unique(joint_eff$Position)))
color_scheme <- colors[as.numeric(as.factor(joint_eff$Position))]

scatterplot3d(joint_eff$Frequency, joint_eff$Effect, joint_eff$mu_fr, color=color_scheme, pch=20, xlab="Frequency", ylab="Effect", zlab="mu_fr")

```

```{r, warning=FALSE, message=FALSE}
library(plotly)

p <- plot_ly(joint_eff, x = ~Frequency, y = ~Effect, z = ~mu_fr, color = ~as.character(Position), type = "scatter3d", mode = "markers", marker = list(size = 6)) # colors = c('blue', 'red')

p <- p %>% layout(scene = list(xaxis = list(title = "Frequency"),
                               yaxis = list(title = "Effect"),
                               zaxis = list(title = "Freq Change")),
                  showlegend = FALSE)

p
```
