---
title: "Untitled"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(patchwork)
library(cowplot)

seeds <- round(seq(1234, 2500, length.out = 100))

nloci <- 1
ninds <- 10000
h2 <- 0.5

mean_pheno <- numeric(length = length(seeds))
sd_pheno <- numeric(length = length(seeds))

for (i in seq_along(seeds)) {
  seed <- seeds[i]
  set.seed(seed)
  
  effects <- rexp(nloci)
  markers <- runif(nloci, 0, 1) #Probability of carrying a given allele 
  additive <- numeric(length = ninds)
  
  for (ind in 1:ninds) {
    geno <- rbinom(nloci, 1, markers)
    effs <- geno*effects
    additive[ind] <- sum(effs)
  }
  V_A <- var(additive)
  V_E <- (V_A/h2)- V_A
  env <- rnorm(ninds, 0.0, sqrt(V_E))
  
  df <- tibble(phenotypes = additive + env)
  #df$phenotypes <- (df$phenotypes / sd(df$phenotypes))
  mean_pheno[i] <- mean(df$phenotypes)
  sd_pheno[i] <- sd(df$phenotypes)
}

mypheno <- tibble(mean_pheno = mean_pheno, sd_pheno = sd_pheno)
# head(mypheno)
# max(mypheno$mean_pheno)
# min(mypheno$mean_pheno)

µs <- mypheno %>% summarise(µp = mean(mean_pheno), µsd = mean(sd_pheno))
```

```{r}
library(patchwork)

p1 <- ggplot()+
  geom_histogram(data = mypheno, aes(mean_pheno), bins = 30)+
  geom_vline(xintercept = µs$µp, color = "red")+
  ggtitle("1 loci")+
  theme(plot.title = element_text(hjust = 0.5))+
  theme_classic()

p2 <- ggplot()+
  geom_histogram(data = mypheno, aes(sd_pheno), bins = 30)+
  geom_vline(xintercept = µs$µsd, color = "red")+
  ggtitle("1 loci")+
  theme(plot.title = element_text(hjust = 0.5))+
  theme_classic()

p1|p2
```

```{r}
library(tidyverse)
library(cowplot)
theme_set(theme_cowplot())

rm(list = ls())
set.seed(7711)

#how many loci
nloci <- 1

#how many individuals
ninds <- 10000

#heritability
h2 <- 0.5

#get effects
effects <- rexp(nloci)
#effects <- rgamma(nloci, 8, 7)
#effects <- rbeta(nloci, 1, 1)
#get freqs
markers <- runif(nloci,0.01,0.99)

additive <- numeric(length = ninds)

for(ii in 1:ninds){
  #get genotype for 10 loci for one individual
  geno <- rbinom(rep(1,10),rep(1,10), markers)
  effs <- geno*effects
  additive[ii] <- sum(effs)
}

V_A <- var(additive)
V_E <- (V_A/h2)- V_A
env <- rnorm(ninds, 0.0, sqrt(V_E))

phenotypes <- tibble(phenotypes = additive + env)

phenotypes$phenotypes <- (phenotypes$phenotypes/ sd(phenotypes$phenotypes)) + 100

#phenotypes$phenotypes <- ((phenotypes$phenotypes - mean(phenotypes$phenotypes))/sd(phenotypes$phenotypes)) + 100


#phenotypes$phenotypes <- (phenotypes$phenotypes/ max(phenotypes$phenotypes))  + 100
#phenotypes$phenotypes <- quantile(phenotypes$phenotypes, rank(phenotypes$phenotypes)/ length(phenotypes$phenotypes))
#phenotypes$phenotypes <- (phenotypes$phenotypes - mean(phenotypes$phenotypes))/ sd(phenotypes$phenotypes) 
#phenotypes$phenotypes <- ((phenotypes$phenotypes - min(phenotypes$phenotypes))/ (max(phenotypes$phenotypes) - min(phenotypes$phenotypes)))
#phenotypes$phenotypes <- (phenotypes$phenotypes/ mean(phenotypes$phenotypes))  + 100

#define new optimum
new_opt <- mean(phenotypes$phenotypes) - sd(phenotypes$phenotypes)*2

phenotypes |>
  ggplot(aes(x=phenotypes)) +
  geom_histogram(bins = 50) +
  geom_vline(xintercept = new_opt, color = "steelblue")


scaling_f <- mean(phenotypes$phenotypes)
  
#phenotypes$fitness <- 1 - ((phenotypes$phenotypes - new_opt)^2/phenotypes$phenotypes) #Quadratic
#phenotypes$fitness <- exp(-(1/10) * (phenotypes$phenotypes - new_opt)^2)# we can alsp try 1/
phenotypes$fitness <- exp(-(3/mean(phenotypes$phenotypes)) * ((phenotypes$phenotypes - new_opt))^2)

#phenotypes$fitness <- exp(-(3/(scaling_f)) * (phenotypes$phenotypes - new_opt)^2)
#phenotypes$fitness <- (dnorm(new_opt - phenotypes$phenotypes, 10))

phenotypes |>
  ggplot(aes(x=fitness)) +
  geom_histogram(bins = 50)


phenotypes |>
  ggplot(aes(phenotypes, fitness)) +
  geom_point() +
  #ylim(0,1) +
  geom_vline(xintercept = new_opt, color = "steelblue")
 #  
```

## Exploring fitness

```{r}
nloci <- c(1, 10, 30, 100, 300, 1000)
ninds <- 10000
h2s <- c(0.1, 0.5, 0.8)
sds <- 1:4

seeds <-1234 #round(seq(1234, 2500, length.out = 50))

# Initialize df dataframe
df <- tibble()

for (seed in seeds) {
  set.seed(seed)
  
  for(locus in nloci){
    effects <- rexp(locus)
    markers <- runif(locus, 0, 1) # Probability of carrying a given allele
    additive <- numeric(length = ninds)
    
    for (ind in 1:ninds) {
      geno <- rbinom(locus, 1, markers)
      effs <- geno * effects
      additive[ind] <- sum(effs)
      V_A <- locus/3 # Scaling VA based on the observation
    }
   # V_A <- locus/3
    #V_A <- var(additive)
    
    for(h2 in h2s){
      V_E <- (V_A / h2) - V_A
      env <- rnorm(ninds, 0.0, sqrt(V_E))
      
      for (sd in sds) {
        myphedata <- tibble(
          phenotypes = additive + env,
          
          mup = 0.5*locus, # Expected mean
          sdp = sqrt(locus/(3*h2)), #Expected standard deviation
          phenotype = ((phenotypes - mup)/sdp), # Phenotype scaling
          
          optimum = mean(phenotype) + (sd * sd(phenotype)),
          sd = sd,  # Add sd column
          seed = seed,  # Add seed column
          h2 = h2,  # Add h2 column
          locus = locus  # Add locus column
        )
        df <- bind_rows(df, myphedata)
      }
    }
  }
}

newdataset <- df %>% group_by(seed, sd, locus, h2) %>%
  mutate(Fitness = exp(-(1/150) * (phenotype - optimum)^2),
    heritability = factor(h2),
    stand_dev = factor(sd))

```

```{r, fig.width=10, fig.height=5}
library(ggridges)
theme_set(theme_classic())

ggplot(newdataset, aes(y = stand_dev, x = Fitness)) +
  geom_density_ridges(aes(fill = heritability), alpha = 0.3,bandwidth = 0.01) + 
  scale_fill_manual(values = c("cyan", "yellow", "magenta")) +
  facet_grid(~locus)+
  theme(axis.text = element_text(size = 12, face = "bold"),
        axis.line = element_line(size = 2),
        axis.title = element_text(size = 12, face = "bold"),
        strip.text = element_text(size = 12, face = "bold"))
```

## Assessing optimum and fitness: To scale single locus

```{r}
rm(list = ls())
library(tibble)
library(dplyr)

nloci <- c(1, 10, 100, 500, 1000, 10000)
ninds <- 10000
h2s <- c(0.1, 0.5, 0.8)
sds <- 1:4

seeds <-1234 #round(seq(1234, 2500, length.out = 50))

# Initialize df dataframe
df <- tibble()

for (seed in seeds) {
  set.seed(seed)
  
  for(locus in nloci){
    effects <- rexp(locus)
    markers <- runif(locus, 0, 1) # Probability of carrying a given allele
    additive <- numeric(length = ninds)
    
    for (ind in 1:ninds) {
      geno <- rbinom(locus, 1, markers)
      effs <- geno * effects
      additive[ind] <- sum(effs)
    }
    V_A <- locus/3
    
    for(h2 in h2s){
      V_E <- (V_A / h2) - V_A
      env <- rnorm(ninds, 0.0, sqrt(V_E))

       for (sd in sds) {
         #sdp <- sqrt(locus / (3 * h2))
        if (locus == 1) {
          sdp <- sqrt(locus*3/h2)
        } else {
          sdp <- sqrt(locus / (3 * h2))
        }
        myphedata <- tibble(
          phenotypes = additive + env,
          
          mup = 0.5*locus, # Expected mean
          sdp = sdp, #Expected standard deviation.         
          phenotype = ((phenotypes - mup)/sdp), # Phenotype scaling
          
          optimum = mean(phenotype) + sd * sd(phenotype),
          Fitness = ifelse(locus==1, exp(-(1/150) * (phenotype - optimum)^2), 
                           exp(-(1/150) * (phenotype - optimum)^2)),
          sd = sd,  # Add sd column
          seed = seed,  # Add seed column
          h2 = h2,  # Add h2 column
          locus = locus  # Add locus column
        )
        df <- bind_rows(df, myphedata)
      }
    }
  }
}

newdataset <- df %>% group_by(seed, sd, locus, h2) %>%
  mutate(heritability = factor(h2),
    stand_dev = factor(sd))

```

```{r, fig.width=10, fig.height=5}

library(ggridges)
theme_set(theme_classic())

ggplot(newdataset, aes(y = stand_dev, x = Fitness)) +
  geom_density_ridges(aes(fill = heritability), alpha = 0.3) + # ,bandwidth = 0.12, rel_min_height = 0.0005
  scale_fill_manual(values = c("cyan", "yellow", "magenta")) +
  facet_grid(~locus, scales = "free_y")+
  scale_y_discrete(expand = c(0.01, 0))+
  theme(axis.text = element_text(size = 12, face = "bold"),
        axis.line = element_line(size = 2),
        axis.title = element_text(size = 12, face = "bold"),
        strip.text = element_text(size = 12, face = "bold"))
```

```{r}
# plot of Optimum vs. sd
ggplot(newdataset, aes(x = sd, y = optimum,  color = heritability)) +
  geom_point() +
  facet_wrap(~locus, scales = "free_y")+
  labs( title = "optimum vs. Standard Deviation",
        x = "Standard Deviation (sd)",
        y = "optimum"
  )+
  theme(plot.title = element_text(hjust = 0.5))
```

```{r}
# Calculate the sequential difference t1 - t in optimum

newdataset2 <- newdataset %>% 
  #dplyr::filter(h2 > 0.1) %>% 
  dplyr::select(optimum, sd, heritability, locus) %>% 
  distinct() %>% 
  group_by(locus, heritability) %>% 
  arrange(sd) %>% 
  mutate(optimum_diff = c(NA, diff(optimum))) %>% 
  drop_na()

# Create the modified plot
ggplot(newdataset2, aes(x = sd, y = optimum_diff, color = heritability)) +
  geom_point() +
  facet_wrap(~locus, scales = "free_y") +
  labs(
    title = "Optimal Difference  vs. Standard Deviation",
    x = "Standard Deviation (sd)",
    y = "Optimal Difference"
  )+
  theme(plot.title = element_text(hjust = 0.5))
```
