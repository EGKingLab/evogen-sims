---
title: "CS_Plots"
author: "Esdras T."
format: html
editor: visual
---

## Constant Selection plots

Optima vary from 1, 2, 3, and 4 standard deviations from mean phenotype, and the selection interval is for 10, 20, and 30 generation (indicates the selection strength). The fitness function use is: exp(-(1/phenotype))\*(phenotype - newopt)q\^2

#### Packages

```{r}
library(tidyverse)
library(pracma)
library(cowplot)
library(ggforce)
library(future)
library(purrr)
library(caret)
library(here)
library(patchwork)
theme_set(theme_cowplot())
```

### Allele Frequency and Locus Effect Plot

```{r}
#| echo: false
#| warning: false
# Load libraries
library(tidyverse)

# Define a function to create a custom theme
mytheme <- function() {
  theme_set(theme_cowplot()) +
    theme(axis.title = element_text(face = "bold"),
          axis.text = element_text(face = "italic"),
          plot.title = element_text(hjust = 0.5),
          legend.position = "none")
}

# Define your plotting function
my_plots <- function(df, mygenomefile, mypath) {
  
  # For Allele Frequency plots
  Freq_plot <- ggplot(df, aes(x = Generation, y = Frequency, color = as.character(Position))) +
    geom_line(linewidth = 0.2) +
    mytheme()
  
  # For Effect plots
  Effect_plot <- ggplot(df, aes(x = Effect)) +
    geom_density() +
    mytheme()
 
  freq_filename <- file.path(mypath, paste0(basename(mygenomefile), "_Freq.png"))
  
  # Save the plot Frequency plots
  png(filename = freq_filename, width = 6, height = 4, units = "in", res = 300)
  print(Freq_plot)
  dev.off()
  
  effect_filename <- file.path(mypath, paste0(basename(mygenomefile), "_Effect.png"))
  
  # Save the plot Effect plots
  png(filename = effect_filename, width = 6, height = 4, units = "in", res = 300)
  print(Effect_plot)
  dev.off()
}
```

> Paths to genomic (allele frequency) files

```{r}

mypath <- "/home/etb68/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Select_Press/ConstFluctSelect.dir/Plots.dir/CS_Plot.dir/GenoPlot.dir"

mygenomefiles <- list.files(path = "/home/etb68/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Select_Press/ConstFluctSelect.dir/CS.dir/", pattern = "^genome.*\\.csv$", full.names = TRUE)

```

> Writing the allele frequency plots

```{r}

for (mygenomefile in mygenomefiles) {
  df <- read.csv(mygenomefile)
  my_plots(df, mygenomefile, mypath)
}
```

### Phenotype and Fitness Plots

```{r}
mon_plots <- function(data, myphenofile, mypath){
  
  pheno_plot <- 
    ggplot(data, aes(x = Generation, y = Phenotype))+
    geom_line()+
    mytheme()
   
  Fitness_plot <- ggplot(data, aes(x = Generation, y = meanFitness))+
    geom_line()+
    mytheme()
  
  PhenoDens <- ggplot(data, aes(x = Phenotype))+
    geom_histogram(bins = 200)
    mytheme()
  
  FitDens <- ggplot(data, aes(x = meanFitness))+
    geom_density()
    mytheme()
    
  pheno_filename <- file.path(mypath, paste0(basename(myphenofile), "_Phenotype.png"))
  pheno_DensName <- file.path(mypath, paste0(basename(myphenofile), "_PhenoDens.png"))
  Fitness_filename <- file.path(mypath, paste0(basename(myphenofile), "_Fitness.png"))
  Fitness_DensName <- file.path(mypath, paste0(basename(myphenofile), "_FitDens.png"))
  
  # Save the plot Effect plots
  png(filename = pheno_filename, width = 6, height = 4, units = "in", res = 300)
  print(pheno_plot)
   dev.off()
   
   png(filename = pheno_DensName, width = 6, height = 4, units = "in", res = 300)
  print(PhenoDens)
   dev.off()
   
   png(filename = Fitness_filename, width = 6, height = 4, units = "in", res = 300)
  print(Fitness_plot)
   dev.off()
   
   png(filename = Fitness_DensName, width = 6, height = 4, units = "in", res = 300)
  print(FitDens)
  dev.off()
  
  # Pheno_Fit <- plot_grid(pheno_plot, Fitness_plot, PhenoDens, FitDens)
  # 
  # ggsave(file.path(mypath, paste0(basename(myphenofile), "Pheno_plots.png")), Pheno_Fit, width = 6, height = 4, dpi = 300)
 
}
```

> Paths to phenotypic files

```{r}
mypath2 <- "/home/etb68/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Select_Press/ConstFluctSelect.dir/Plots.dir/CS_Plot.dir/PhenoPlot.dir"
myphenofiles <- list.files(path = "/home/etb68/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Select_Press/ConstFluctSelect.dir/CS.dir/", pattern = "^MeanPhenotypes.*\\.csv$", full.names = TRUE)
```

> Writing the phenotype plots

```{r}
for (myphenofile in myphenofiles) {
  df <- read.csv(myphenofile)
  mon_plots(df, myphenofile, mypath2)
}
```
