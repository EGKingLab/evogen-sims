---
title: "Model's Plots"
author: "Esdras"
format: html
editor: visual
---

```{r, echo=FALSE, message=FALSE}
library(tidyverse)
library(stringr)
library(cowplot)
library(plotly)
theme_set(theme_cowplot())
```

```{r, echo=FALSE, message=FALSE}
mytheme <- function() {
  theme_set(theme_cowplot()) +
    theme(axis.title = element_text(face = "bold"),
          axis.text = element_text(face = "italic"),
          plot.title = element_text(hjust = 0.5), 
          legend.position = "none")# 
  }
```

### Neutral Selection

```{r, fig.width = 16, fig.height = 8, echo=FALSE, message=FALSE}
file_path <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/NS.dir/genome1_n100_H0.5.csv"

genome_file <- read.csv(file_path) %>% 
  select(Generation, Position, Frequency) %>% 
  mutate(Position = factor(Position))

#replicate <- as.numeric(str_extract(file_path, "(?<=genome)[0-9]+"))
heritability <- as.numeric(str_extract(file_path, "(?<=H0\\.)\\d+"))
Loci_n <- as.numeric(str_extract(file_path, "(?<=_n)\\d+"))

genome_file %>% 
  ggplot(aes(Generation, Frequency, color = Position))+
  geom_line(linewidth = 0.2)+
  ggtitle(paste(" ", Loci_n, " Loci", " for 0.", heritability, " Heritability", sep = ""))+
  mytheme()
```

```{r, echo=FALSE, message=FALSE}
genome_files <- list.files("~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/NS.dir/", pattern = "^genome1", full.names = TRUE)
plots <- list()

for (genome_file in genome_files){
  df <- read.csv(genome_file) %>% 
  select(Generation, Position, Frequency) %>% 
  mutate(Position = factor(Position))
  
  heritability <- as.numeric(str_extract(file_path, "(?<=H0\\.)\\d+"))
  Loci_n <- as.numeric(str_extract(file_path, "(?<=_n)\\d+"))
  
  plots[[genome_file]] <- df %>% 
  ggplot(aes(Generation, Frequency, color = Position))+
  geom_line(linewidth = 0.2)+
  ggtitle(paste(" ", Loci_n, " Loci", " for 0.", heritability, " Heritability", sep = ""))+
  mytheme()
}

plot_grid(plots)
```

```{r, fig.width = 16, fig.height = 12, echo=FALSE, message=FALSE}
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(stringr)
library(patchwork)

# Define the path to genome files
genome_files <- list.files("~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/NS.dir/", pattern = "^genome(1)_n(10|1|100|300)_.*\\.csv$", full.names = TRUE)

# Create an empty list to store plots
plots <- list()

# Loop through genome files and create plots
for (genome_file in genome_files) {

   replicate_id <- as.numeric(str_extract(genome_file, "(?<=genome)\\d+"))
   heritability <- as.numeric(str_extract(genome_file, "(?<=H0\\.)\\d+"))
  # Loci_n <- as.numeric(str_extract(genome_file, "(?<=_n)\\d+"))
  
  df <- read.csv(genome_file, header = TRUE) %>% 
    select(Generation, Position, Frequency, Effect) %>% 
    group_by(Position) %>% 
    mutate(Position = factor(Position),
           replicate = replicate_id,
           herit = heritability,
           initFreq = Frequency[Generation == 1],
           postion_effect_init = 
             paste("position = ", Position," ","Effect = ", 
                   round(Effect, 2)," ", "Initial Freq = ", 
                   round(initFreq, 2) , sep = ""))
  
  # Create a ggplot and add it to the list of plots
  plots[[genome_file]] <- (df %>%
    ggplot(aes(Generation, Frequency, color = interaction(postion_effect_init, replicate))) +
    geom_line(linewidth = 0.2) +
    labs(x = "", y = "") +
    ylim(min = 0, max = 1)+
    #ggtitle(paste(Loci_n, "L", " for 0.", heritability, " H", sep = "")) +
    mytheme())  # Make sure mytheme() is defined or loaded correctly
  ## ggplotly
}
(plots)
# Combine the plots into a single plot grid
#combined_plot <- wrap_plots(plots, ncol = 3)

# Print the combined plot
#print(combined_plot)

```

```{r, fig.width = 16, fig.height = 8, echo=FALSE, message=FALSE}
dir_path <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/NS.dir/"
pattern = "^genome15"
file_list <- list.files(dir_path, pattern = pattern, full.names = TRUE)

# Create an empty list to store the data frames
data_frames <- list()

for (file_name in file_list) {
  herit <- as.numeric(str_extract(file_name, "(?<=H0\\.)\\d+"))
  loci <- as.numeric(str_extract(file_name, "(?<=_n)\\d+"))
  
  # Read the file 
  data <- read.csv(file_name, header = TRUE) %>%
    select(Generation, Position, Frequency) %>%
    mutate(Position = as.factor(Position))
  
  # Add the "replicate", "herititability", and "loci" columns
  data$herit <- rep(herit, nrow(data))
  data$loci <- rep(loci, nrow(data))
  
  # Add the data frame to the list
  data_frames[[file_name]] <- data
}
# Combine all the data frames into one
combined_data <- bind_rows(data_frames)

allele_data <- combined_data %>% 
  mutate(loci_herit = paste(loci, herit, sep = "_")) 

mytheme <- function(){
  theme_set(theme_cowplot())+
    theme(axis.title = element_text(face = "bold"),
          axis.text = element_text(face = "italic"),
          plot.title = element_text(hjust = 0.5),
          legend.position = "none",
          plot.background = element_rect(fill = "white"))
}

#loci.heritabilities = unique(allele_data$loci_herit)

allele_data %>% filter(loci==70) %>%
       ggplot(aes(x = Generation, y = Frequency, color = Position)) +
       geom_line(linewidth = 0.2) +
       facet_wrap(~loci_herit, ncol = 1) +
       labs(y = "Mean Frequency")+
       mytheme()
```

### Constant Selection

```{r, echo=FALSE, message=FALSE}
dirpath <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/CS.dir/"
pattern <- "^genome15\\D" #(\\D|$)
files <- list.files(dirpath, pattern, full.names = TRUE)

dataframes <- list()
for(file in files){
  herit <- as.numeric(str_extract(file, "(?<=H)0\\.\\d+"))
  loci <- as.numeric(str_extract(file, "(?<=_n)\\d+"))
  sd <- as.numeric(str_extract(file, "(?<=SD)\\d+"))

data <- read.csv(file, header = TRUE) %>% 
  select(Generation, Position, Frequency) %>% 
  mutate(Position = factor(Position))

data$herit <- rep(herit, nrow(data))
data$loci <- rep(loci, nrow(data))
data$sd <- rep(sd, nrow(data))

dataframes[[file]] <- data
}
```

```{r, echo=FALSE, message=FALSE}
combined_data <- bind_rows(dataframes) %>% 
  mutate(h2_sd = paste("h2 = ", herit," ", "sd = ", sd, sep = ""))
```

```{r, fig.width = 16, fig.height = 8, echo=FALSE, message=FALSE}
#path <- "~/OneDrive - University of Missouri/Test_Test/CS.dir/Plots/"

plots <- list()
loci <- unique(combined_data$loci)
for(locus in loci){
  locus_data <- combined_data %>% 
    filter(loci == locus, Generation <= 2000)
  p <- locus_data %>% 
    ggplot(aes(Generation, Frequency, group = Position, color = Position))+
    #geom_point(size = 0.2)+
    geom_line(linewidth = 0.1)+
    facet_wrap(~h2_sd, ncol = 4)+
    ylim(min = 0, max = 1)+
    theme_bw()+
    theme(legend.position = "none")
  plots[[locus]] <- (p)#ggplotly
  #plotname <- paste(path, "Allele_plot_for_loci ", locus, ".png", sep = "")
  #ggsave(filename = plotname, plot = plots[[locus]], width = 12, height = 8, units = "in")
}
plots
```

```{r, fig.width = 16, fig.height = 8, echo=FALSE, message=FALSE}
combined_data %>%
    filter(loci == 100) %>%
    ggplot(aes(Generation, Frequency, group = Position, color = Position))+
    #geom_point()+
    geom_line(linewidth = 0.2)+
    facet_wrap(~h2_sd, ncol = 4)+
    theme_bw()+
    theme(legend.position = "none")
```

### Fluctuating Selection

#### Linear

```{r, warning=FALSE, echo=FALSE, message=FALSE}
dirpath <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/LinFS.dir/"
pattern <- "^genome15\\D" #(\\D|$)
files <- list.files(dirpath, pattern, full.names = TRUE)

dataframes <- list()
for(file in files){
  herit <- as.numeric(str_extract(file, "(?<=H)0\\.\\d+"))
  loci <- as.numeric(str_extract(file, "(?<=_n)\\d+"))
  sd <- as.numeric(str_extract(file, "(?<=SD)\\d+"))
  gen <- as.numeric(str_extract(file, "(?<=Gen)\\d+"))

data <- read.csv(file, header = TRUE) %>% 
  select(Generation, Position, Frequency) %>% 
  mutate(Position = factor(Position))

data$herit <- rep(herit, nrow(data))
data$loci <- rep(loci, nrow(data))
data$sd <- rep(sd, nrow(data))
data$gen <- rep(gen, nrow(data))

dataframes[[file]] <- data
}
```

```{r, echo=FALSE, message=FALSE}
combined_data <- bind_rows(dataframes) %>% 
  mutate(h2_sd = paste("h2 = ", herit," ", "sd = ", sd, sep = ""),
         loci_gen = paste("loci = ", loci," ", "gen = ", gen, sep = ""))
```

```{r, fig.width = 16, fig.height = 8, echo=FALSE, message=FALSE}
#path <- "~/OneDrive - University of Missouri/Test_Test/LinFS.dir/Plots/"

plots <- list()
loci_gens <- unique(combined_data$loci_gen)
for(loci_geni in loci_gens){
  locus_data <- combined_data %>% 
    filter(loci_gen == loci_geni)
   p <- locus_data %>% 
    ggplot(aes(Generation, Frequency, group = Position, color = Position))+
    geom_line(linewidth = 0.1)+
    facet_wrap(~h2_sd, ncol = 4)+
    ylim(min = 0, max = 1)+
    theme_bw()+
    theme(legend.position = "none")
  
plots[[loci_geni]] <- (p)#ggplotly

  #plotname <- paste(path, "Allele_plot_for_loci ", locus, ".png", sep = "")
  #ggsave(filename = plotname, plot = plots[[locus]], width = 12, height = 8, units = "in")
}
plots
```

```{r, fig.width = 16, fig.height = 8, echo=FALSE, message=FALSE}
combined_data %>% 
    filter(loci == 70, gen == 30) %>% 
    ggplot(aes(Generation, Frequency, group = Position, color = Position))+
    geom_line(linewidth = 0.1)+
    facet_wrap(~h2_sd, ncol = 4)+
    ylim(min = 0, max = 1)+
    theme_bw()+
    theme(legend.position = "none")
```

#### Sinusoidal I

```{r, echo=FALSE, message=FALSE}
dirpath <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/SinFS.dir/"
pattern <- "^genome15\\D" #(\\D|$)
files <- list.files(dirpath, pattern, full.names = TRUE)

dataframes <- list()
for(file in files){
  herit <- as.numeric(str_extract(file, "(?<=H)0\\.\\d+"))
  loci <- as.numeric(str_extract(file, "(?<=_n)\\d+"))
  sd <- as.numeric(str_extract(file, "(?<=SD)\\d+"))
  gen <- as.numeric(str_extract(file, "(?<=Gen)\\d+"))

data <- read.csv(file, header = TRUE) %>% 
  select(Generation, Position, Frequency, Effect) %>% 
  mutate(Position = factor(Position))

data$herit <- rep(herit, nrow(data))
data$loci <- rep(loci, nrow(data))
data$sd <- rep(sd, nrow(data))
data$gen <- rep(gen, nrow(data))

dataframes[[file]] <- data
}
```

```{r, echo=FALSE, message=FALSE}
combined_data <- bind_rows(dataframes) %>% 
  mutate(h2_sd = paste("h2 = ", herit," ", "sd = ", sd, sep = ""),
         loci_gen = paste("loci = ", loci," ", "gen = ", gen, sep = ""))
```

```{r, fig.width = 16, fig.height = 8, echo=FALSE, message=FALSE}
#path <- "~/OneDrive - University of Missouri/Test_Test/SinFS.dir/Plots/"

plots <- list()
loci_gens <- unique(combined_data$loci_gen)
for(loci_geni in loci_gens){
  locus_data <- combined_data %>% 
    filter(loci_gen == loci_geni)
  p <- locus_data %>% 
    ggplot(aes(Generation, Frequency, group = interaction(Position, Effect), color = interaction(Position, Effect)))+
    geom_line(linewidth = 0.1)+
    facet_wrap(~h2_sd, ncol = 4)+
    ylim(min = 0, max = 1)+
    theme_bw()+
    theme(legend.position = "none")
  #plotname <- paste(path, "Allele_plot_for_loci ", locus, ".png", sep = "")
  #ggsave(filename = plotname, plot = plots[[locus]], width = 12, height = 8, units = "in")
  plots[[loci_geni]] <- (p) #ggplotly
}
plots
```

#### Sinusoidal II

```{r, fig.width = 16, fig.height = 8, echo=FALSE, message=FALSE}
dirpath <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/SinFSGen.dir/"
pattern <- "^genome15\\D" #(\\D|$)
files <- list.files(dirpath, pattern, full.names = TRUE)

dataframes <- list()
for(file in files){
  herit <- as.numeric(str_extract(file, "(?<=H)0\\.\\d+"))
  loci <- as.numeric(str_extract(file, "(?<=_n)\\d+"))
  sd <- as.numeric(str_extract(file, "(?<=SD)\\d+"))

data <- read.csv(file, header = TRUE) %>% 
  select(Generation, Position, Frequency, Effect) %>%
  group_by(Position) %>% 
  mutate(Position = factor(Position),
         Effect = round(Effect, 3),
         Init_Freq = round(Frequency[Generation == 1], 3),
         herit =herit,
         loci = loci,
         sd = sd)

dataframes[[file]] <- data
}
```

```{r, echo=FALSE, message=FALSE}
combined_data <- bind_rows(dataframes) %>% 
  mutate(h2_sd = paste("h2 = ", herit," ", "sd = ", sd, sep = ""))
```

```{r, fig.width = 16, fig.height = 8, echo=FALSE, message=FALSE}
#path <- "~/OneDrive - University of Missouri/Test_Test/SinFSGen.dir/Plots/"
set.seed(1234)
plots <- list()
loci <- unique(combined_data$loci)
for(locus in loci){
  locus_data <- combined_data %>% 
    filter(loci == locus, Generation <= 2000)
  
  # Select 10 random positions
  #selected_positions <- sample(locus_data$Position, size = min(15, nrow(locus_data)), replace = F)
  
  # Filter the data for the selected positions
  #locus_data <- locus_data %>% 
    #filter(Position %in% selected_positions)
  
  p <- locus_data %>% 
    ggplot(aes(Generation, Frequency, group = interaction(Position,Effect, Init_Freq), color = interaction(Position,Effect, Init_Freq)))+
    geom_line(linewidth = 0.1)+
    facet_wrap(~h2_sd, ncol = 4)+
    ylim(min = 0, max = 1)+
    theme_bw()+
    theme(legend.position = "none")
  
  plots[[locus]] <- (p) #ggplotly
}
plots


```

```{r, fig.width = 16, fig.height = 8, echo=FALSE, message=FALSE}
pr <- combined_data %>%
    filter(loci == 70) %>%
    ggplot(aes(Generation, Frequency, group = Position, color = Position))+
    geom_line(linewidth = 0.2)+
    facet_wrap(~h2_sd, ncol = 4)+
    theme_bw()+
    theme(legend.position = "none")
(pr) #ggplotly

```
