---
title: "Spectral Analysis Plots"
author: "Esdras"
format: html
editor: visual
---

```{r}
library(tidyverse)
library(stringr)
library(cowplot)
library(plotly)
theme_set(theme_cowplot())
```

```{r}
dirpath <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/SinFS.dir/"
pattern <- "^genome[1-5]_n(10|70|100)_H0.(1|8|5)SD(1|4)Gen(10|30).csv" # ^genome1_n(1|10|70)_H0.(1|8)SD(1|4)Gen(10|30).csv // ^genome1_n(1|10|70)_.*
files <- list.files(dirpath, pattern, full.names = TRUE)

dataframes <- list()
for(file in files){
  herit <- as.numeric(str_extract(file, "(?<=H)0\\.\\d+"))
  loci <- as.numeric(str_extract(file, "(?<=_n)\\d+"))
  sd <- as.numeric(str_extract(file, "(?<=SD)\\d+"))
  gen <- as.numeric(str_extract(file, "(?<=Gen)\\d+"))
  repl <- as.numeric(str_extract(file, "(?<=genome)\\d+"))

data <- read.csv(file, header = TRUE) %>% 
  select(Generation, Position, Frequency) %>% 
  mutate(Position = factor(Position))

data$herit <- rep(herit, nrow(data))
data$loci <- rep(loci, nrow(data))
data$sd <- rep(sd, nrow(data))
data$gen <- rep(gen, nrow(data))
data$repl <- rep(repl, nrow(data))

dataframes[[file]] <- data
}
```

```{r}
combined_data <- bind_rows(dataframes) %>% 
  mutate(loci_Gen = paste("loci = ", loci," ", "Gen = ", gen, sep = ""))
```

```{r}

fft_fx <- function(dirpath, pattern, spectrum_span){
  files <- list.files(dirpath, pattern = pattern, full.names = TRUE)

  files_df <- data.frame(file_name = files) %>%
    mutate(myloci_full = str_extract(file_name, "genome\\d+_n\\d+")) %>%
    mutate(myloci = str_remove(myloci_full, "genome\\d+_n"))

  files_by_myloci <- split(files_df, files_df$myloci)

  all_results <- data.frame()

  # Iterate files in the data frame
  for (i in 1:nrow(files_df)) {
    file_name <- files_df$file_name[i]
    myloci <- files_df$myloci[i]

    file <- read.csv(file_name) %>% 
      dplyr::select(-Origin, -Effect)

    dat_wide <- pivot_wider(file[,c("Generation","Position","Frequency")], names_from=Position, values_from=Frequency)
    dat_wide[is.na(dat_wide)] <- 0
    ff1 <- dat_wide[,2:(as.numeric(files_df$myloci[i])+1)]

    # Apply spectrum and calculate row means
    ttest <- spectrum(ff1, spans=spectrum_span, plot=FALSE)

    # If ttest$spec is not a matrix, skip this file
    if (!is.matrix(ttest$spec)) {
      next
    }

    out.spect <- rowMeans(ttest$spec)

    # Prepare data frame for plot
    dd <- data.frame("Frequency" = rep(ttest$freq),
                     "File" = basename(file_name),
                     "spec" = out.spect,
                     "myloci" = myloci)

    # Combine with previous results
    all_results <- rbind(all_results, dd)
  }

  # Return the result
  return(all_results)
}

```

```{r}
spectrum_span=2
all_results <- fft_fx(dirpath, pattern, spectrum_span)

nloci <- unique(all_results$myloci)
fft1 <- list()
for(loci in nloci){
fft1[[loci]] <- all_results %>%
  filter(myloci==loci) %>% 
  mutate(Frequency= 1/Frequency) %>% 
  filter(Frequency < 40) %>% 
  ggplot(aes(Frequency, spec, color = File)) + 
  geom_line(linewidth=1.1) + 
  theme(legend.position = "none") +
  xlab("Periodicity") +
  ylab("Spectral Density")
}
fft1
```
