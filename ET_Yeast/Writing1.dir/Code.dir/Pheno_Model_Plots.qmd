---
title: "Phenotype Model's Plots"
author: "Esdras"
format: html
editor: visual
---

```{r, message=FALSE, echo=FALSE}
library(dplyr)
library(ggplot2)
library(tidyr)
library(forcats)
library(stringr)
library(cowplot)
library(patchwork)
library(plotly)
theme_set(theme_cowplot())
```

```{r, echo=FALSE, message=FALSE}
mytheme <- function() {
  theme_set(theme_cowplot()) +
    theme(axis.title = element_text(face = "bold"),
          axis.text = element_text(face = "italic"),
          plot.title = element_text(hjust = 0.5),
          legend.position = "none")
  }
```

### Neutral Selection

```{r, echo=FALSE, results='hold', fig.width = 16, fig.height = 8}

file_path <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/CS.dir/MeanPhenotypes1_n100_H0.8SD1.csv"

pheno_file <- read.csv(file_path) %>% 
  mutate(Optimum = Optimum, Phenotype = Phenotype)

# replicate <- as.numeric(str_extract(file_path, "(?<=MeanPhenotypes)[0-9]+"))
heritability <- as.numeric(str_extract(file_path, "(?<=H0\\.)\\d+"))
Loci_n <- as.numeric(str_extract(file_path, "(?<=_n)\\d+"))

ggplot(pheno_file, aes(Generation, Phenotype)) +
  geom_line(linewidth = 0.2) +
  #geom_line(aes(y = Optimum), color = "darkred", size = 1.2, linewidth = 0.2) +
  #geom_point(data = filter(pheno_file, Generation == 1), aes(y = Optimum), size = 3, color = "magenta") +
  ggtitle(paste(" ", Loci_n, " Loci", " for 0.", heritability, " Heritability", sep = "")) +
  mytheme()
```

```{r, echo=FALSE, results='hold', fig.width = 16, fig.height = 8}
file_path <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/SinFS.dir/MeanPhenotypes1_n100_H0.8SD3Gen10.csv"

pheno_file <- read.csv(file_path) %>% 
  mutate(Optimum = Optimum, Phenotype = Phenotype )

# replicate <- as.numeric(str_extract(file_path, "(?<=MeanPhenotypes)[0-9]+"))
heritability <- as.numeric(str_extract(file_path, "(?<=H0\\.)\\d+"))
Loci_n <- as.numeric(str_extract(file_path, "(?<=_n)\\d+"))

pheno_file <- pheno_file %>% filter(Generation < 1000)

ggplot(pheno_file, aes(Generation, Phenotype)) +
  geom_line(linewidth = 0.2) +
  #geom_line(aes(y = Optimum), color = "darkred", size = 1.2, linewidth = 0.2) +
  #geom_point(data = filter(pheno_file, Generation == 1), aes(y = Optimum), size = 3, color = "magenta") +
  ggtitle(paste(" ", Loci_n, " Loci", " for 0.", heritability, " Heritability", sep = "")) +
  mytheme()
```

```{r, echo=FALSE, results='hold'}

pheno_files <- list.files("~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/NS.dir/", pattern =  "^MeanPhenotypes15_n\\d+_H0.1_*", full.names = TRUE)
plots <- list()

for (pheno_file in pheno_files){
  df <- read.csv(pheno_file) 
  
  heritability <- as.numeric(str_extract(pheno_file, "(?<=H0\\.)\\d+"))
  Loci_n <- as.numeric(str_extract(pheno_file, "(?<=_n)\\d+"))
  
  plots[[pheno_file]] <- df %>% 
  ggplot(aes(Generation,Phenotype))+
  geom_line(linewidth = 0.2)+
  ggtitle(paste(" ", Loci_n, " Loci", " for 0.", heritability, " Heritability", sep = ""))+
  mytheme()
}

plot_grid(plotlist = plots)

```

```{r, message=FALSE, fig.width = 16, fig.height = 8, echo=FALSE}
# # Define the path to genome files
# pheno_files <- list.files("~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/NS.dir/", pattern = "^MeanPhenotypes15", full.names = TRUE)
# 
# plots <- list()
# 
# # Loop through phenotype files and create plots
# for (pheno_file in pheno_files) {
#   df <- read.csv(pheno_file)
#   
#   heritability <- as.numeric(str_extract(pheno_file, "(?<=H0\\.)\\d+"))
#   Loci_n <- as.numeric(str_extract(pheno_file, "(?<=_n)\\d+"))
#   
#   # Create a ggplot and add it to the list of plots
#   plots[[pheno_file]] <- df %>%
#     ggplot(aes(Generation,Phenotype)) +
#     geom_line(linewidth = 0.2) +
#     labs(x = "", y = "") +
#     #ggtitle(paste(Loci_n, "L", " for 0.", heritability, " H", sep = "")) +
#     mytheme()  # Make sure mytheme() is defined or loaded correctly
# }
# 
# # Combine the plots into a single plot grid
# combined_plot <- wrap_plots(plots, ncol = 3, scales = "free_y")

```

### Constant Selection

```{r, message=FALSE, echo=FALSE}

dirpath <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/CS.dir/"
pattern <- "^MeanPhenotypes15\\D" #(\\D|$)
files <- list.files(dirpath, pattern, full.names = TRUE)

dataframes <- list()
for(file in files){
  herit <- as.numeric(str_extract(file, "(?<=H)0\\.\\d+"))
  loci <- as.numeric(str_extract(file, "(?<=_n)\\d+"))
  sd <- as.numeric(str_extract(file, "(?<=SD)\\d+"))

data <- read.csv(file, header = TRUE)

data$herit <- rep(herit, nrow(data))
data$loci <- rep(loci, nrow(data))
data$sd <- rep(sd, nrow(data))

dataframes[[file]] <- data
}
```

```{r, echo=FALSE}
combined_data <- bind_rows(dataframes) %>% 
  mutate(h2_sd = paste("h2 = ", herit," ", "sd = ", sd, sep = ""))
```

```{r, fig.width = 16, fig.height = 8, echo=FALSE}

#path <- "~/OneDrive - University of Missouri/Test_Test/CS.dir/Plots/"

plots <- list()
loci <- unique(combined_data$loci)
for(locus in loci){
  locus_data <- combined_data %>% 
    filter(loci == locus)
  p <- locus_data %>% 
    ggplot(aes(Generation, Phenotype))+
    #geom_point(size = 0.2)+
    geom_line(linewidth = 0.5)+
  geom_line(aes(y = Optimum), color = "darkred", linewidth = 0.5) +
  geom_point(data = filter(locus_data, Generation == 1), aes(y = Optimum), size = 1, color = "magenta") +
    facet_wrap(~h2_sd, ncol = 4, scales = "free_y")+
    #ylim(min = 100, max = 125)+
    theme_bw()+
    theme(legend.position = "none")
  #plotname <- paste(path, "Allele_plot_for_loci ", locus, ".png", sep = "")
  #ggsave(filename = plotname, plot = plots[[locus]], width = 12, height = 8, units = "in")
  plots[[locus]] <- (p) # ggplotly
}
plots
```

```{r, echo=FALSE, results='hold', echo=FALSE}
combined_data %>%
    filter(loci == 100) %>%
    ggplot(aes(Generation, Phenotype))+
    #geom_point()+
    geom_line(linewidth = 0.2)+
    facet_wrap(~h2_sd, ncol = 4)+
    theme_bw()+
    theme(legend.position = "none")
```

### Fluctuating Selection

#### Linear

```{r, echo=FALSE, results='hold', fig.width = 16, fig.height = 8, warning=FALSE}
data <- read.csv("~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/SinFS.dir/MeanPhenotypes1_n10_H0.1SD4Gen30.csv")%>% 
  mutate(Optimum = Optimum , Phenotype = Phenotype)

p <- plot_ly(data, x= ~Generation, y = ~round(Phenotype, 3), z = ~ round(meanFitness, 3), color = ~factor(round(Optimum, 0)), type = "scatter3d", mode = "markers", marker = list(size = 2))
p <- p %>% layout(scene = list(yaxis = list(title = "Phenotype"), xaxis = list(title = "Generation"), zaxis = list(title = "Mean Fitness")), 
                  showlegend = TRUE, legend = list(font = list(size = 16), orientation = "v", x = 1.02, y = 0.5))
p 

```

```{r, echo=FALSE, results='hold', fig.width = 16, fig.height = 8}

# plt <- data %>% 
#   ggplot(aes((round(meanFitness, 3)), round(Phenotype, 3), 
#              color = factor(round(Optimum, 0))))+
#   geom_boxplot()+
#   geom_hline(yintercept = mean(data$Phenotype), color = "darkred")+
#   labs(x = "Mean Fitness", y = "Phenotype", color = "Optimum")
# 
# #ggplotly(plt, tooltip = "all")
# plt

```

```{r, message=FALSE, echo=FALSE}
dirpath <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/LinFS.dir/"
pattern <- "^MeanPhenotypes15\\D" #(\\D|$)
files <- list.files(dirpath, pattern, full.names = TRUE)

dataframes <- list()
for(file in files){
  herit <- as.numeric(str_extract(file, "(?<=H)0\\.\\d+"))
  loci <- as.numeric(str_extract(file, "(?<=_n)\\d+"))
  sd <- as.numeric(str_extract(file, "(?<=SD)\\d+"))
  gen <- as.numeric(str_extract(file, "(?<=Gen)\\d+"))

data <- read.csv(file, header = TRUE)

data$herit <- rep(herit, nrow(data))
data$loci <- rep(loci, nrow(data))
data$sd <- rep(sd, nrow(data))
data$gen <- rep(gen, nrow(data))

dataframes[[file]] <- data
}
```

```{r, message=FALSE, echo=FALSE}
combined_data <- bind_rows(dataframes) %>% 
  mutate(h2_sd = paste("h2 = ", herit," ", "sd = ", sd, sep = ""),
         loci_gen = paste("loci = ", loci," ", "gen = ", gen, sep = ""))
```

```{r, message=FALSE, fig.width = 16, fig.height = 8, echo=FALSE}
#path <- "~/OneDrive - University of Missouri/Test_Test/LinFS.dir/Plots/"

plots <- list()
loci_gens <- unique(combined_data$loci_gen)
for(loci_geni in loci_gens){
  locus_data <- combined_data %>% 
    filter(loci_gen == loci_geni)
  p <- locus_data %>% 
    ggplot(aes(Generation, Phenotype))+
    geom_line(linewidth = 0.1)+
    facet_wrap(~h2_sd, ncol = 4, scales = "free_y")+
   # geom_line(aes(y = Optimum), color = "darkred", size = 1.2, linewidth = 0.2) +
#geom_point(data = filter(locus_data, Generation == 1), aes(y = Optimum), size = 1, color = "magenta") +
    #ylim(min = 100, max = 125)+
    theme_bw()+
    theme(legend.position = "none")
  #plotname <- paste(path, "Allele_plot_for_loci ", locus, ".png", sep = "")
  #ggsave(filename = plotname, plot = plots[[locus]], width = 12, height = 8, units = "in")
  plots[[loci_geni]] <- (p) # ggplotly
}
plots
```

```{r, echo=FALSE, results='hide', echo=FALSE}
# combined_data %>% 
#     filter(loci == 70, gen == 30) %>% 
#     ggplot(aes(Generation, Phenotype, group = Position, color = Position))+
#     geom_line(linewidth = 0.1)+
#     facet_wrap(~h2_sd, ncol = 4)+
#     ylim(min = 100, max = 125)+
#     theme_bw()+
#     theme(legend.position = "none")
```

#### Sinusoidal I

```{r, echo=FALSE}
dirpath <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/SinFS.dir/"
pattern <- "^MeanPhenotypes15\\D" 
files <- list.files(dirpath, pattern, full.names = TRUE)

dataframes <- list()
for(file in files){
  herit <- as.numeric(str_extract(file, "(?<=H)0\\.\\d+"))
  loci <- as.numeric(str_extract(file, "(?<=_n)\\d+"))
  sd <- as.numeric(str_extract(file, "(?<=SD)\\d+"))
  gen <- as.numeric(str_extract(file, "(?<=Gen)\\d+"))

  data <- read.csv(file, header = TRUE)

  data$herit <- rep(herit, nrow(data))
  data$loci <- rep(loci, nrow(data))
  data$sd <- rep(sd, nrow(data))
  data$gen <- rep(gen, nrow(data))

  dataframes[[file]] <- data
}
```

```{r, echo=FALSE}
combined_data <- bind_rows(dataframes) %>%
  mutate(h2_sd = paste("h2 = ", herit, " ", "sd = ", sd, sep = ""),
         loci_gen = paste("loci = ", loci, " ", "gen = ", gen, sep = ""))
```

```{r, fig.width = 16, fig.height = 8, message=FALSE, echo=FALSE}
#path <- "~/OneDrive - University of Missouri/Test_Test/SinFS.dir/Plots/"

plots <- list()
loci_gens <- unique(combined_data$loci_gen)
for(loci_geni in loci_gens){
  locus_data <- combined_data %>%
    filter(loci_gen == loci_geni)
  p <- locus_data %>%
    ggplot(aes(Generation, Phenotype)) +
    geom_line(linewidth = 0.1) +
    facet_wrap(~h2_sd, ncol = 4, scales = "free_y") +
    theme_bw() +
    theme(legend.position = "none")
#plotname <- paste(path, "Allele_plot_for_loci ", locus, ".png", sep = "")
  #ggsave(filename = plotname, plot = plots[[locus]], width = 12, height = 8, units = "in")
  plots[[loci_geni]] <- (p)#ggplotly
  
}
plots
```

#### Sinusoidal II

```{r, echo=FALSE}
dirpath <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/SinFSGen.dir/"
pattern <- "^MeanPhenotypes15\\D" #(\\D|$)
files <- list.files(dirpath, pattern, full.names = TRUE)

dataframes <- list()
for(file in files){
  herit <- as.numeric(str_extract(file, "(?<=H)0\\.\\d+"))
  loci <- as.numeric(str_extract(file, "(?<=_n)\\d+"))
  sd <- as.numeric(str_extract(file, "(?<=SD)\\d+"))

data <- read.csv(file, header = TRUE)

data$herit <- rep(herit, nrow(data))
data$loci <- rep(loci, nrow(data))
data$sd <- rep(sd, nrow(data))

dataframes[[file]] <- data
}
```

```{r, echo=FALSE}
combined_data <- bind_rows(dataframes) %>% 
  mutate(h2_sd = paste("h2 = ", herit," ", "sd = ", sd, sep = ""))
```

```{r, fig.width = 16, fig.height = 8, message=FALSE, echo=FALSE}
#path <- "~/OneDrive - University of Missouri/Test_Test/CS.dir/Plots/"

plots <- list()
loci <- unique(combined_data$loci)
for(locus in loci){
  locus_data <- combined_data %>% 
    filter(loci == locus)
  p <- locus_data %>% 
    ggplot(aes(Generation, Phenotype))+
    #geom_point(size = 0.2)+
    geom_line(linewidth = 0.1)+
  #geom_line(aes(y = Optimum), color = "darkred", size = 0.1, linewidth = 0.2) +
  #geom_point(data = filter(locus_data, Generation == 1), aes(y = Optimum), size = 0.1, color = "magenta") +
    facet_wrap(~h2_sd, ncol = 4, scales = "free_y")+
    #ylim(min = 100, max = 125)+
    theme_bw()+
    theme(legend.position = "none")
  #plotname <- paste(path, "Allele_plot_for_loci ", locus, ".png", sep = "")
  #ggsave(filename = plotname, plot = plots[[locus]], width = 12, height = 8, units = "in")
  plots[[locus]] <- (p) #ggplotly
}
plots
```
