---
title: "Phenotype Model's Plots"
author: "Esdras"
format: html
editor: visual
---R
---

```{r}
library(tidyverse)
library(stringr)
library(cowplot)
theme_set(theme_cowplot())
```

```{r}
mytheme <- function() {
  theme_set(theme_cowplot()) +
    theme(axis.title = element_text(face = "bold"),
          axis.text = element_text(face = "italic"),
          plot.title = element_text(hjust = 0.5),
          legend.position = "none")
  }
```

### Neutral Selection

```{r}
file_path <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/NS.dir/MeanPhenotypes10_n100_H0.1.csv"

pheno_file <- read.csv(file_path) 

#replicate <- as.numeric(str_extract(file_path, "(?<=MeanPhenotypes)[0-9]+"))
heritability <- as.numeric(str_extract(file_path, "(?<=H0\\.)\\d+"))
Loci_n <- as.numeric(str_extract(file_path, "(?<=_n)\\d+"))

pheno_file %>% 
  ggplot(aes(Generation, Phenotype))+
  geom_line(linewidth = 0.2)+
  ggtitle(paste(" ", Loci_n, " Loci", " for 0.", heritability, " Heritability", sep = ""))+
  mytheme()
```

```{r}

pheno_files <- list.files("~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/NS.dir/", pattern = "^MeanPhenotypes15", full.names = TRUE)
plots <- list()

for (pheno_file in pheno_files){
  df <- read.csv(pheno_file) 
  
  heritability <- as.numeric(str_extract(file_path, "(?<=H0\\.)\\d+"))
  Loci_n <- as.numeric(str_extract(file_path, "(?<=_n)\\d+"))
  
  plots[[pheno_file]] <- df %>% 
  ggplot(aes(Generation,Phenotype))+
  geom_line(linewidth = 0.2)+
  ggtitle(paste(" ", Loci_n, " Loci", " for 0.", heritability, " Heritability", sep = ""))+
  mytheme()
}

plot_grid(plots)
```

```{r}
# Load necessary libraries
library(dplyr)
library(ggplot2)
library(stringr)
library(patchwork)

# Define the path to genome files
genome_files <- list.files("~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/NS.dir/", pattern = "^MeanPhenotypes19", full.names = TRUE)

plots <- list()

# Loop through phenotype files and create plots
for (pheno_file in pheno_files) {
  df <- read.csv(pheno_file)
  
  heritability <- as.numeric(str_extract(pheno_file, "(?<=H0\\.)\\d+"))
  Loci_n <- as.numeric(str_extract(pheno_file, "(?<=_n)\\d+"))
  
  # Create a ggplot and add it to the list of plots
  plots[[pheno_file]] <- df %>%
    ggplot(aes(Generation,Phenotype)) +
    geom_line(linewidth = 0.2) +
    labs(x = "", y = "") +
    #ggtitle(paste(Loci_n, "L", " for 0.", heritability, " H", sep = "")) +
    mytheme()  # Make sure mytheme() is defined or loaded correctly
}

# Combine the plots into a single plot grid
combined_plot <- wrap_plots(plots, ncol = 3)

# Print the combined plot
print(combined_plot)

```

```{r}
dir_path <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/NS.dir/"
pattern = "^genome19"
file_list <- list.files(dir_path, pattern = pattern, full.names = TRUE)

# Create an empty list to store the data frames
data_frames <- list()

for (file_name in file_list) {
  herit <- as.numeric(str_extract(file_name, "(?<=H0\\.)\\d+"))
  loci <- as.numeric(str_extract(file_name, "(?<=_n)\\d+"))
  
  # Read the file 
  data <- read.csv(file_name, header = TRUE) %>%
    select(Generation, Position, Frequency) %>%
    mutate(Position = as.factor(Position))
  
  # Add the "replicate", "herititability", and "loci" columns
  data$herit <- rep(herit, nrow(data))
  data$loci <- rep(loci, nrow(data))
  
  # Add the data frame to the list
  data_frames[[file_name]] <- data
}
# Combine all the data frames into one
combined_data <- bind_rows(data_frames)

allele_data <- combined_data %>% 
  mutate(loci_herit = paste(loci, herit, sep = "_")) 

mytheme <- function(){
  theme_set(theme_cowplot())+
    theme(axis.title = element_text(face = "bold"),
          axis.text = element_text(face = "italic"),
          plot.title = element_text(hjust = 0.5),
          legend.position = "none",
          plot.background = element_rect(fill = "white"))
}

#loci.heritabilities = unique(allele_data$loci_herit)

allele_data %>% filter(loci==70, Generation <= 1000) %>%
       ggplot(aes(x = Generation, y = Frequency, color = Position)) +
       geom_line(linewidth = 0.2) +
       facet_wrap(~loci_herit, ncol = 3) +
       labs(y = "Mean Frequency")+
       mytheme()
```

### Constant Selection

```{r}

dirpath <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/CS.dir/"
pattern <- "^MeanPhenotypes15\\D" #(\\D|$)
files <- list.files(dirpath, pattern, full.names = TRUE)

dataframes <- list()
for(file in files){
  herit <- as.numeric(str_extract(file, "(?<=H)0\\.\\d+"))
  loci <- as.numeric(str_extract(file, "(?<=_n)\\d+"))
  sd <- as.numeric(str_extract(file, "(?<=SD)\\d+"))

data <- read.csv(file, header = TRUE)

data$herit <- rep(herit, nrow(data))
data$loci <- rep(loci, nrow(data))
data$sd <- rep(sd, nrow(data))

dataframes[[file]] <- data
}
```

```{r}
combined_data <- bind_rows(dataframes) %>% 
  mutate(h2_sd = paste("h2 = ", herit," ", "sd = ", sd, sep = ""))
```

```{r}

#path <- "~/OneDrive - University of Missouri/Test_Test/CS.dir/Plots/"

plots <- list()
loci <- unique(combined_data$loci)
for(locus in loci){
  locus_data <- combined_data %>% 
    filter(loci == locus)
  plots[[locus]] <- locus_data %>% 
    ggplot(aes(Generation, Phenotype))+
    #geom_point(size = 0.2)+
    geom_line(linewidth = 0.1)+
    facet_wrap(~h2_sd, ncol = 4)+
    ylim(min = 100, max = 125)+
    theme_bw()+
    theme(legend.position = "none")
  #plotname <- paste(path, "Allele_plot_for_loci ", locus, ".png", sep = "")
  #ggsave(filename = plotname, plot = plots[[locus]], width = 12, height = 8, units = "in")
}
plots
```

```{r}
combined_data %>%
    filter(loci == 100) %>%
    ggplot(aes(Generation, Phenotype))+
    #geom_point()+
    geom_line(linewidth = 0.2)+
    facet_wrap(~h2_sd, ncol = 4)+
    theme_bw()+
    theme(legend.position = "none")
```

### Fluctuating Selection

#### Linear

```{r}
dirpath <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/LinFS.dir/"
pattern <- "^MeanPhenotypes15\\D" #(\\D|$)
files <- list.files(dirpath, pattern, full.names = TRUE)

dataframes <- list()
for(file in files){
  herit <- as.numeric(str_extract(file, "(?<=H)0\\.\\d+"))
  loci <- as.numeric(str_extract(file, "(?<=_n)\\d+"))
  sd <- as.numeric(str_extract(file, "(?<=SD)\\d+"))
  gen <- as.numeric(str_extract(file, "(?<=Gen)\\d+"))

data <- read.csv(file, header = TRUE)

data$herit <- rep(herit, nrow(data))
data$loci <- rep(loci, nrow(data))
data$sd <- rep(sd, nrow(data))
data$gen <- rep(gen, nrow(data))

dataframes[[file]] <- data
}
```

```{r}
combined_data <- bind_rows(dataframes) %>% 
  mutate(h2_sd = paste("h2 = ", herit," ", "sd = ", sd, sep = ""),
         loci_gen = paste("loci = ", loci," ", "gen = ", gen, sep = ""))
```

```{r}
#path <- "~/OneDrive - University of Missouri/Test_Test/LinFS.dir/Plots/"

plots <- list()
loci_gens <- unique(combined_data$loci_gen)
for(loci_geni in loci_gens){
  locus_data <- combined_data %>% 
    filter(loci_gen == loci_geni)
  plots[[loci_geni]] <- locus_data %>% 
    ggplot(aes(Generation, Phenotype))+
    geom_line(linewidth = 0.1)+
    facet_wrap(~h2_sd, ncol = 4)+
    ylim(min = 100, max = 125)+
    theme_bw()+
    theme(legend.position = "none")
  #plotname <- paste(path, "Allele_plot_for_loci ", locus, ".png", sep = "")
  #ggsave(filename = plotname, plot = plots[[locus]], width = 12, height = 8, units = "in")
}
plots
```

```{r}
combined_data %>% 
    filter(loci == 70, gen == 30) %>% 
    ggplot(aes(Generation, Frequency, group = Position, color = Position))+
    geom_line(linewidth = 0.1)+
    facet_wrap(~h2_sd, ncol = 4)+
    ylim(min = 100, max = 125)+
    theme_bw()+
    theme(legend.position = "none")
```

#### Sinusoidal I

```{r}
dirpath <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/SinFS.dir/"
pattern <- "^MeanPhenotypes15\\D" #(\\D|$)
files <- list.files(dirpath, pattern, full.names = TRUE)

dataframes <- list()
for(file in files){
  herit <- as.numeric(str_extract(file, "(?<=H)0\\.\\d+"))
  loci <- as.numeric(str_extract(file, "(?<=_n)\\d+"))
  sd <- as.numeric(str_extract(file, "(?<=SD)\\d+"))
  gen <- as.numeric(str_extract(file, "(?<=Gen)\\d+"))

data <- read.csv(file, header = TRUE)

data$herit <- rep(herit, nrow(data))
data$loci <- rep(loci, nrow(data))
data$sd <- rep(sd, nrow(data))
data$gen <- rep(gen, nrow(data))

dataframes[[file]] <- data
}
```

```{r}
combined_data <- bind_rows(dataframes) %>% 
  mutate(h2_sd = paste("h2 = ", herit," ", "sd = ", sd, sep = ""),
         loci_gen = paste("loci = ", loci," ", "gen = ", gen, sep = ""))
```

```{r}
#path <- "~/OneDrive - University of Missouri/Test_Test/SinFS.dir/Plots/"

plots <- list()
loci_gens <- unique(combined_data$loci_gen)
for(loci_geni in loci_gens){
  locus_data <- combined_data %>% 
    filter(loci_gen == loci_geni)
  plots[[loci_geni]] <- locus_data %>% 
    ggplot(aes(Generation, Phenotype))+
    geom_line(linewidth = 0.1)+
    facet_wrap(~h2_sd, ncol = 4)+
   # ylim(min = 100, max = 125)+
    theme_bw()+
    theme(legend.position = "none")
  #plotname <- paste(path, "Allele_plot_for_loci ", locus, ".png", sep = "")
  #ggsave(filename = plotname, plot = plots[[locus]], width = 12, height = 8, units = "in")
}
plots
```

#### Sinusoidal II

```{r}
dirpath <- "~/YeastProj.dir/evogen-sims/ET_Yeast/output.dir/Selection_Models/WF.dir/SinFSGen.dir/"
pattern <- "^MeanPhenotypes15\\D" #(\\D|$)
files <- list.files(dirpath, pattern, full.names = TRUE)

dataframes <- list()
for(file in files){
  herit <- as.numeric(str_extract(file, "(?<=H)0\\.\\d+"))
  loci <- as.numeric(str_extract(file, "(?<=_n)\\d+"))
  sd <- as.numeric(str_extract(file, "(?<=SD)\\d+"))

data <- read.csv(file, header = TRUE) %>% 
  mutate(Phenotype = Phenotype - 100)

data$herit <- rep(herit, nrow(data))
data$loci <- rep(loci, nrow(data))
data$sd <- rep(sd, nrow(data))

dataframes[[file]] <- data
}
```

```{r}
combined_data <- bind_rows(dataframes) %>% 
  mutate(h2_sd = paste("h2 = ", herit," ", "sd = ", sd, sep = ""))
```

```{r}

#path <- "~/OneDrive - University of Missouri/Test_Test/SinFSGen.dir/Plots/"

plots <- list()
loci <- unique(combined_data$loci)
for(locus in loci){
  locus_data <- combined_data %>% 
    filter(loci == locus)
  plots[[locus]] <- locus_data %>% 
    ggplot(aes(Generation, Phenotype))+
    #geom_point(size = 0.2)+
    geom_line(linewidth = 0.1)+
    facet_wrap(~h2_sd, ncol = 4)+
    #ylim(min = 0, max = 1)+
    theme_bw()+
    theme(legend.position = "none")
  #plotname <- paste(path, "Allele_plot_for_loci ", locus, ".png", sep = "")
  #ggsave(filename = plotname, plot = plots[[locus]], width = 12, height = 8, units = "in")
}
plots
```

```{r}
combined_data %>%
    filter(loci == 70) %>%
    ggplot(aes(Generation, Frequency, group = Position, color = Position))+
    geom_line(linewidth = 0.2)+
    facet_wrap(~h2_sd, ncol = 4)+
    theme_bw()+
    theme(legend.position = "none")
```
